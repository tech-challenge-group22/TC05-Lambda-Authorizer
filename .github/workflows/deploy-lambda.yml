name: Deploy Lambda Function
"on":
    workflow_dispatch:
    push:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 18

            - name: Install dependencies
              run: cd lambda && npm install

            - name: Test functions
              run: cd lambda && npm test
    build_deploy:
        runs-on: ubuntu-latest
        env:
          TF_VAR_database_name: ${{ secrets.TF_VAR_DATABASE_NAME }}
          TF_VAR_database_password: ${{ secrets.TF_VAR_DATABASE_PASSWORD }}
          TF_VAR_database_username: ${{ secrets.TF_VAR_DATABASE_USERNAME }}
          TF_VAR_db_host: ${{ secrets.TF_VAR_DB_HOST }}
          TF_VAR_region: ${{ secrets.AWS_REGION }}
          TF_VAR_lab_role_arn: ${{ vars.TF_VAR_LAB_ROLE_ARN }}
        needs: test
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 18

            - name: Install dependencies
              run: cd lambda && npm install

            - name: Compile TypeScript
              run: cd lambda && npm run build

            - name: Zip files
              run: cd lambda && cd dist && zip -r validate-customer.zip .

            - name: Setup Terraform
              run: cd terraform

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
            
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
                aws-region: ${{ secrets.AWS_REGION }}

            - name: Terraform Init
              id: init
              run: cd terraform && terraform init
              
            - name: Terraform Plan
              run: cd terraform && terraform plan

            - name: Terraform Apply
              run: cd terraform && terraform apply -auto-approve

            - name: Deploy to AWS
              uses: appleboy/lambda-action@master
              with:
                  function_name: validate-customer
                  zip_file: lambda/dist/validate-customer.zip
            - name: Clean up
              run: cd lambda && npm ci
